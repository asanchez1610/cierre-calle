package pe.gob.miraflores.mobile.domain.mapaincidencias;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class AuditoriaIncidenciaCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table GEO_MAP_AUDITORIA
     *
     * @mbggenerated Wed Sep 21 12:02:13 COT 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table GEO_MAP_AUDITORIA
     *
     * @mbggenerated Wed Sep 21 12:02:13 COT 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table GEO_MAP_AUDITORIA
     *
     * @mbggenerated Wed Sep 21 12:02:13 COT 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GEO_MAP_AUDITORIA
     *
     * @mbggenerated Wed Sep 21 12:02:13 COT 2016
     */
    public AuditoriaIncidenciaCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GEO_MAP_AUDITORIA
     *
     * @mbggenerated Wed Sep 21 12:02:13 COT 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GEO_MAP_AUDITORIA
     *
     * @mbggenerated Wed Sep 21 12:02:13 COT 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GEO_MAP_AUDITORIA
     *
     * @mbggenerated Wed Sep 21 12:02:13 COT 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GEO_MAP_AUDITORIA
     *
     * @mbggenerated Wed Sep 21 12:02:13 COT 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GEO_MAP_AUDITORIA
     *
     * @mbggenerated Wed Sep 21 12:02:13 COT 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GEO_MAP_AUDITORIA
     *
     * @mbggenerated Wed Sep 21 12:02:13 COT 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GEO_MAP_AUDITORIA
     *
     * @mbggenerated Wed Sep 21 12:02:13 COT 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GEO_MAP_AUDITORIA
     *
     * @mbggenerated Wed Sep 21 12:02:13 COT 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GEO_MAP_AUDITORIA
     *
     * @mbggenerated Wed Sep 21 12:02:13 COT 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GEO_MAP_AUDITORIA
     *
     * @mbggenerated Wed Sep 21 12:02:13 COT 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table GEO_MAP_AUDITORIA
     *
     * @mbggenerated Wed Sep 21 12:02:13 COT 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andTipoIsNull() {
            addCriterion("TIPO is null");
            return (Criteria) this;
        }

        public Criteria andTipoIsNotNull() {
            addCriterion("TIPO is not null");
            return (Criteria) this;
        }

        public Criteria andTipoEqualTo(String value) {
            addCriterion("TIPO =", value, "tipo");
            return (Criteria) this;
        }

        public Criteria andTipoNotEqualTo(String value) {
            addCriterion("TIPO <>", value, "tipo");
            return (Criteria) this;
        }

        public Criteria andTipoGreaterThan(String value) {
            addCriterion("TIPO >", value, "tipo");
            return (Criteria) this;
        }

        public Criteria andTipoGreaterThanOrEqualTo(String value) {
            addCriterion("TIPO >=", value, "tipo");
            return (Criteria) this;
        }

        public Criteria andTipoLessThan(String value) {
            addCriterion("TIPO <", value, "tipo");
            return (Criteria) this;
        }

        public Criteria andTipoLessThanOrEqualTo(String value) {
            addCriterion("TIPO <=", value, "tipo");
            return (Criteria) this;
        }

        public Criteria andTipoLike(String value) {
            addCriterion("TIPO like", value, "tipo");
            return (Criteria) this;
        }

        public Criteria andTipoNotLike(String value) {
            addCriterion("TIPO not like", value, "tipo");
            return (Criteria) this;
        }

        public Criteria andTipoIn(List<String> values) {
            addCriterion("TIPO in", values, "tipo");
            return (Criteria) this;
        }

        public Criteria andTipoNotIn(List<String> values) {
            addCriterion("TIPO not in", values, "tipo");
            return (Criteria) this;
        }

        public Criteria andTipoBetween(String value1, String value2) {
            addCriterion("TIPO between", value1, value2, "tipo");
            return (Criteria) this;
        }

        public Criteria andTipoNotBetween(String value1, String value2) {
            addCriterion("TIPO not between", value1, value2, "tipo");
            return (Criteria) this;
        }

        public Criteria andValorIsNull() {
            addCriterion("VALOR is null");
            return (Criteria) this;
        }

        public Criteria andValorIsNotNull() {
            addCriterion("VALOR is not null");
            return (Criteria) this;
        }

        public Criteria andValorEqualTo(String value) {
            addCriterion("VALOR =", value, "valor");
            return (Criteria) this;
        }

        public Criteria andValorNotEqualTo(String value) {
            addCriterion("VALOR <>", value, "valor");
            return (Criteria) this;
        }

        public Criteria andValorGreaterThan(String value) {
            addCriterion("VALOR >", value, "valor");
            return (Criteria) this;
        }

        public Criteria andValorGreaterThanOrEqualTo(String value) {
            addCriterion("VALOR >=", value, "valor");
            return (Criteria) this;
        }

        public Criteria andValorLessThan(String value) {
            addCriterion("VALOR <", value, "valor");
            return (Criteria) this;
        }

        public Criteria andValorLessThanOrEqualTo(String value) {
            addCriterion("VALOR <=", value, "valor");
            return (Criteria) this;
        }

        public Criteria andValorLike(String value) {
            addCriterion("VALOR like", value, "valor");
            return (Criteria) this;
        }

        public Criteria andValorNotLike(String value) {
            addCriterion("VALOR not like", value, "valor");
            return (Criteria) this;
        }

        public Criteria andValorIn(List<String> values) {
            addCriterion("VALOR in", values, "valor");
            return (Criteria) this;
        }

        public Criteria andValorNotIn(List<String> values) {
            addCriterion("VALOR not in", values, "valor");
            return (Criteria) this;
        }

        public Criteria andValorBetween(String value1, String value2) {
            addCriterion("VALOR between", value1, value2, "valor");
            return (Criteria) this;
        }

        public Criteria andValorNotBetween(String value1, String value2) {
            addCriterion("VALOR not between", value1, value2, "valor");
            return (Criteria) this;
        }

        public Criteria andFecRegistraIsNull() {
            addCriterion("FEC_REGISTRA is null");
            return (Criteria) this;
        }

        public Criteria andFecRegistraIsNotNull() {
            addCriterion("FEC_REGISTRA is not null");
            return (Criteria) this;
        }

        public Criteria andFecRegistraEqualTo(Date value) {
            addCriterion("FEC_REGISTRA =", value, "fecRegistra");
            return (Criteria) this;
        }

        public Criteria andFecRegistraNotEqualTo(Date value) {
            addCriterion("FEC_REGISTRA <>", value, "fecRegistra");
            return (Criteria) this;
        }

        public Criteria andFecRegistraGreaterThan(Date value) {
            addCriterion("FEC_REGISTRA >", value, "fecRegistra");
            return (Criteria) this;
        }

        public Criteria andFecRegistraGreaterThanOrEqualTo(Date value) {
            addCriterion("FEC_REGISTRA >=", value, "fecRegistra");
            return (Criteria) this;
        }

        public Criteria andFecRegistraLessThan(Date value) {
            addCriterion("FEC_REGISTRA <", value, "fecRegistra");
            return (Criteria) this;
        }

        public Criteria andFecRegistraLessThanOrEqualTo(Date value) {
            addCriterion("FEC_REGISTRA <=", value, "fecRegistra");
            return (Criteria) this;
        }

        public Criteria andFecRegistraIn(List<Date> values) {
            addCriterion("FEC_REGISTRA in", values, "fecRegistra");
            return (Criteria) this;
        }

        public Criteria andFecRegistraNotIn(List<Date> values) {
            addCriterion("FEC_REGISTRA not in", values, "fecRegistra");
            return (Criteria) this;
        }

        public Criteria andFecRegistraBetween(Date value1, Date value2) {
            addCriterion("FEC_REGISTRA between", value1, value2, "fecRegistra");
            return (Criteria) this;
        }

        public Criteria andFecRegistraNotBetween(Date value1, Date value2) {
            addCriterion("FEC_REGISTRA not between", value1, value2, "fecRegistra");
            return (Criteria) this;
        }

        public Criteria andDesIpRegistraIsNull() {
            addCriterion("DES_IP_REGISTRA is null");
            return (Criteria) this;
        }

        public Criteria andDesIpRegistraIsNotNull() {
            addCriterion("DES_IP_REGISTRA is not null");
            return (Criteria) this;
        }

        public Criteria andDesIpRegistraEqualTo(String value) {
            addCriterion("DES_IP_REGISTRA =", value, "desIpRegistra");
            return (Criteria) this;
        }

        public Criteria andDesIpRegistraNotEqualTo(String value) {
            addCriterion("DES_IP_REGISTRA <>", value, "desIpRegistra");
            return (Criteria) this;
        }

        public Criteria andDesIpRegistraGreaterThan(String value) {
            addCriterion("DES_IP_REGISTRA >", value, "desIpRegistra");
            return (Criteria) this;
        }

        public Criteria andDesIpRegistraGreaterThanOrEqualTo(String value) {
            addCriterion("DES_IP_REGISTRA >=", value, "desIpRegistra");
            return (Criteria) this;
        }

        public Criteria andDesIpRegistraLessThan(String value) {
            addCriterion("DES_IP_REGISTRA <", value, "desIpRegistra");
            return (Criteria) this;
        }

        public Criteria andDesIpRegistraLessThanOrEqualTo(String value) {
            addCriterion("DES_IP_REGISTRA <=", value, "desIpRegistra");
            return (Criteria) this;
        }

        public Criteria andDesIpRegistraLike(String value) {
            addCriterion("DES_IP_REGISTRA like", value, "desIpRegistra");
            return (Criteria) this;
        }

        public Criteria andDesIpRegistraNotLike(String value) {
            addCriterion("DES_IP_REGISTRA not like", value, "desIpRegistra");
            return (Criteria) this;
        }

        public Criteria andDesIpRegistraIn(List<String> values) {
            addCriterion("DES_IP_REGISTRA in", values, "desIpRegistra");
            return (Criteria) this;
        }

        public Criteria andDesIpRegistraNotIn(List<String> values) {
            addCriterion("DES_IP_REGISTRA not in", values, "desIpRegistra");
            return (Criteria) this;
        }

        public Criteria andDesIpRegistraBetween(String value1, String value2) {
            addCriterion("DES_IP_REGISTRA between", value1, value2, "desIpRegistra");
            return (Criteria) this;
        }

        public Criteria andDesIpRegistraNotBetween(String value1, String value2) {
            addCriterion("DES_IP_REGISTRA not between", value1, value2, "desIpRegistra");
            return (Criteria) this;
        }

        public Criteria andTipoLikeInsensitive(String value) {
            addCriterion("upper(TIPO) like", value.toUpperCase(), "tipo");
            return (Criteria) this;
        }

        public Criteria andValorLikeInsensitive(String value) {
            addCriterion("upper(VALOR) like", value.toUpperCase(), "valor");
            return (Criteria) this;
        }

        public Criteria andDesIpRegistraLikeInsensitive(String value) {
            addCriterion("upper(DES_IP_REGISTRA) like", value.toUpperCase(), "desIpRegistra");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table GEO_MAP_AUDITORIA
     *
     * @mbggenerated do_not_delete_during_merge Wed Sep 21 12:02:13 COT 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table GEO_MAP_AUDITORIA
     *
     * @mbggenerated Wed Sep 21 12:02:13 COT 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}